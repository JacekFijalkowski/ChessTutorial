@using ChessTutorial.Models
@model IEnumerable<ChessTutorial.Models.Piece>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <style type="text/css">
        .choosing {
            width: 270px;
            height: 190px;
            margin: 20px;
            border: 15px solid
        }

        .chessboard {
            width: 690px;
            height: 690px;
            margin: 20px;
            border: 25px solid #333;
        }

        .black {
            float: left;
            width: 80px;
            height: 80px;
            background-color: rosybrown;
            font-size: 55px;
            text-align: center;
            display: table-cell;
            vertical-align: middle;
            border: 1px solid
        }

        .white {
            float: left;
            width: 80px;
            height: 80px;
            background-color: wheat;
            font-size: 55px;
            text-align: center;
            display: table-cell;
            vertical-align: middle;
        }
        .noselect {
            -webkit-touch-callout: none; /* iOS Safari */
            -webkit-user-select: none; /* Safari */
            -moz-user-select: none; /* Old versions of Firefox */
            -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome, Opera and Firefox */
        }
    </style>
</head>

<table>
    <tr>
        <td>
            <div class="chessboard">
                @for (int y = 0; y < 4; y++)
                {
                    for (int x = 0; x < 4; x++)
                    {
                        <div X ="@(2*x+1)" Y ="@(8-2*y)" class="white noselect"></div>
                        <div X ="@(2*x+2)" Y ="@(8-2*y)" class="black noselect"></div>
                    }
                    for (int x = 0; x < 4; x++)
                    {
                        <div X ="@(2*x+1)" Y ="@(8-2*y-1)" class="black noselect"></div>
                        <div X ="@(2*x+2)" Y ="@(8-2*y-1)" class="white noselect"></div>
                    }
                }
            </div>
        </td>
        <td>
            <text>Choose piece.</text>
            <div class="choosing">
                @{
                    var color = "white";
                    foreach (var piece in Model)
                    {
                        <div class="@color noselect" piece-type="@piece.GetType()" unicode-symbol="@piece.UnicodeSymbol">
                            @piece.UnicodeSymbol
                        </div>
                        color = (color == "white" ? "black" : "white");
                    }
                }

            </div>
            <button href>@Html.ActionLink("Restart", "Index", "Home")</button>

        </td>
    </tr>
</table>

@section scripts
{
    <script>
        var PieceUnicodeSymbol = "";
        var PieceType = "";
        var PieceOnBoard;

        $(document).ready(function() {

            $(".choosing *").on({ mouseenter:
                function() {
                    $(this).css("background-color", "lightskyblue");
                }, mouseleave:
                function() {
                    $(this).css("background-color", "");
                }
            });

        $(".choosing *")
            .on("click",
                function() {
                    $(".choosing *").off("click");
                    $(".choosing *").off("mouseenter");
                    $(this).text("");
                    PieceType = $(this).attr("piece-type");
                    PieceUnicodeSymbol = $(this).attr("unicode-symbol");
                    ActivatePutingPieceOnBoard();
                    ActivateHoverBoard();
                    $("text").text("Choose position for your piece.");
                }
            );
        });

        function ActivatePutingPieceOnBoard() {
            $(".chessboard *")
                .on("click",
                    function() {
                        PieceOnBoard = $(this);
                        PieceOnBoard.text(PieceUnicodeSymbol);
                        $(".chessboard *").off("click");
                        ActivatePieceSelection();
                        $("text").text("Click your piece to move it.");
                    });
        }

        function ActivateHoverBoard() {
            var presentColor;
            $(".chessboard *").on({ mouseenter:
                    function () {
                        presentColor = $(this).css("background-color");
                        $(this).css("background-color", "lightskyblue");
                    }, mouseleave:
                    function () {
                        $(this).css("background-color", presentColor);
                    }
            });
        }

        function ActivatePieceSelection() {
            PieceOnBoard.on("click",
                function () {

                    var piece = {}
                    piece.name = PieceType;
                    piece.location = {
                        x: PieceOnBoard.attr("X"),
                        y: PieceOnBoard.attr("Y")
                    }

                    $.ajax({
                        url: "/api/pieces/checkAvailableMoves",
                        method: "POST",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(piece),
                        dataType: "json",
                        success: function (data) {
                            $.each(data,
                                function (i, location) {
                                    ColorAvailableLocations(location.X, location.Y);
                                });
                            ActivateMoveChoosing();
                            $("text").text("Click where to move your piece.");
                        }
                    });
                });
        }

        function ColorAvailableLocations(x, y) {
            $(`div[X = ${x} ][Y = ${y}]`).css("background-color", "lightblue");
        }

        function ActivateMoveChoosing() {
            $(".chessboard *").on("click",
                function() {
                    var clickedField = $(this);
                    var piece = {}
                    piece.name = PieceType;
                    piece.location = {
                        x: PieceOnBoard.attr("X"),
                        y: PieceOnBoard.attr("Y")
                    }
                    piece.nextLocation = {
                        x: $(this).attr("X"),
                        y: $(this).attr("Y")
                    }
                    $.ajax({
                        url: "/api/pieces/validateMove",
                        method: "POST",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(piece),
                        dataType: "json",
                        success: function(data) {
                            if (data) {
                                $(".chessboard *").off("mouseenter");
                                $(".chessboard *").off("mouseleave");
                                $(".chessboard *").css("background-color", "");
                                $(".chessboard *").off("click");
                                PieceOnBoard.text("");
                                PieceOnBoard = clickedField;
                                PieceOnBoard.text(PieceUnicodeSymbol);
                                ActivatePieceSelection();
                                $("text").text("Nice move. Click your piece to move it again.");
                                ActivateHoverBoard();
                            } else {
                                $(".chessboard *").css("background-color", "");
                                $(".chessboard *").off("click");
                                $("text").text("Wrong move. Try again.");
                                ActivatePieceSelection();
                            }
                        }
                    });

                });
        }

        


    </script>
}
